// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.modules;

import android.app.Application;
import com.google.android.gms.location.FusedLocationProviderClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideLocationProviderClientFactory implements Factory<FusedLocationProviderClient> {
  private final Provider<Application> applicationProvider;

  public RepositoryModule_ProvideLocationProviderClientFactory(
      Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public FusedLocationProviderClient get() {
    return provideLocationProviderClient(applicationProvider.get());
  }

  public static RepositoryModule_ProvideLocationProviderClientFactory create(
      Provider<Application> applicationProvider) {
    return new RepositoryModule_ProvideLocationProviderClientFactory(applicationProvider);
  }

  public static FusedLocationProviderClient provideLocationProviderClient(Application application) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideLocationProviderClient(application));
  }
}
