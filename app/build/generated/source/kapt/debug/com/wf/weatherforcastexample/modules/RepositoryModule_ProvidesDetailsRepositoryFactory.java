// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.modules;

import com.wf.weatherforcastexample.ui.details.repo.DetailsRepository;
import com.wf.weatherforcastexample.ui.details.repo.DetailsRepositoryImp;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvidesDetailsRepositoryFactory implements Factory<DetailsRepository> {
  private final Provider<DetailsRepositoryImp> detailsRepositoryImpProvider;

  public RepositoryModule_ProvidesDetailsRepositoryFactory(
      Provider<DetailsRepositoryImp> detailsRepositoryImpProvider) {
    this.detailsRepositoryImpProvider = detailsRepositoryImpProvider;
  }

  @Override
  public DetailsRepository get() {
    return providesDetailsRepository(detailsRepositoryImpProvider.get());
  }

  public static RepositoryModule_ProvidesDetailsRepositoryFactory create(
      Provider<DetailsRepositoryImp> detailsRepositoryImpProvider) {
    return new RepositoryModule_ProvidesDetailsRepositoryFactory(detailsRepositoryImpProvider);
  }

  public static DetailsRepository providesDetailsRepository(
      DetailsRepositoryImp detailsRepositoryImp) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.providesDetailsRepository(detailsRepositoryImp));
  }
}
