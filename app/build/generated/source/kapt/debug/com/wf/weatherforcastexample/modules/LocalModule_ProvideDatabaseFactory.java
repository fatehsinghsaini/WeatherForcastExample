// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.modules;

import android.content.Context;
import com.wf.weatherforcastexample.db.CityDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalModule_ProvideDatabaseFactory implements Factory<CityDatabase> {
  private final Provider<Context> contextProvider;

  public LocalModule_ProvideDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public CityDatabase get() {
    return provideDatabase(contextProvider.get());
  }

  public static LocalModule_ProvideDatabaseFactory create(Provider<Context> contextProvider) {
    return new LocalModule_ProvideDatabaseFactory(contextProvider);
  }

  public static CityDatabase provideDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(LocalModule.INSTANCE.provideDatabase(context));
  }
}
