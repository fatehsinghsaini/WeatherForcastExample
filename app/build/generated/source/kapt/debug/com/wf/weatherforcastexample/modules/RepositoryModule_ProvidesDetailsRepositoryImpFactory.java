// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.modules;

import com.wf.weatherforcastexample.db.ForecastCityDao;
import com.wf.weatherforcastexample.domain.api.ApiService;
import com.wf.weatherforcastexample.ui.details.repo.DetailsRepositoryImp;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvidesDetailsRepositoryImpFactory implements Factory<DetailsRepositoryImp> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<ForecastCityDao> forecastCityDaoProvider;

  public RepositoryModule_ProvidesDetailsRepositoryImpFactory(
      Provider<ApiService> apiServiceProvider, Provider<ForecastCityDao> forecastCityDaoProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.forecastCityDaoProvider = forecastCityDaoProvider;
  }

  @Override
  public DetailsRepositoryImp get() {
    return providesDetailsRepositoryImp(apiServiceProvider.get(), forecastCityDaoProvider.get());
  }

  public static RepositoryModule_ProvidesDetailsRepositoryImpFactory create(
      Provider<ApiService> apiServiceProvider, Provider<ForecastCityDao> forecastCityDaoProvider) {
    return new RepositoryModule_ProvidesDetailsRepositoryImpFactory(apiServiceProvider, forecastCityDaoProvider);
  }

  public static DetailsRepositoryImp providesDetailsRepositoryImp(ApiService apiService,
      ForecastCityDao forecastCityDao) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.providesDetailsRepositoryImp(apiService, forecastCityDao));
  }
}
