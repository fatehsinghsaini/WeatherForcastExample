// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.modules;

import com.google.gson.Gson;
import com.wf.weatherforcastexample.domain.api.ApiGooglePlaces;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideHomeGooglePlacesFactory implements Factory<ApiGooglePlaces> {
  private final Provider<Gson> gsonProvider;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public NetworkModule_ProvideHomeGooglePlacesFactory(Provider<Gson> gsonProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    this.gsonProvider = gsonProvider;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public ApiGooglePlaces get() {
    return provideHomeGooglePlaces(gsonProvider.get(), okHttpClientProvider.get());
  }

  public static NetworkModule_ProvideHomeGooglePlacesFactory create(Provider<Gson> gsonProvider,
      Provider<OkHttpClient> okHttpClientProvider) {
    return new NetworkModule_ProvideHomeGooglePlacesFactory(gsonProvider, okHttpClientProvider);
  }

  public static ApiGooglePlaces provideHomeGooglePlaces(Gson gson, OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideHomeGooglePlaces(gson, okHttpClient));
  }
}
