// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.modules;

import com.wf.weatherforcastexample.db.CityDatabase;
import com.wf.weatherforcastexample.db.ForecastCityDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocalModule_ForecastCityDaoFactory implements Factory<ForecastCityDao> {
  private final Provider<CityDatabase> databaseProvider;

  public LocalModule_ForecastCityDaoFactory(Provider<CityDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public ForecastCityDao get() {
    return forecastCityDao(databaseProvider.get());
  }

  public static LocalModule_ForecastCityDaoFactory create(Provider<CityDatabase> databaseProvider) {
    return new LocalModule_ForecastCityDaoFactory(databaseProvider);
  }

  public static ForecastCityDao forecastCityDao(CityDatabase database) {
    return Preconditions.checkNotNullFromProvides(LocalModule.INSTANCE.forecastCityDao(database));
  }
}
