// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.modules;

import com.wf.weatherforcastexample.db.CityDao;
import com.wf.weatherforcastexample.domain.api.ApiService;
import com.wf.weatherforcastexample.ui.home.repo.HomeRepositoryImp;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvidesHomeRepositoryImpFactory implements Factory<HomeRepositoryImp> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<CityDao> cityDaoProvider;

  public RepositoryModule_ProvidesHomeRepositoryImpFactory(Provider<ApiService> apiServiceProvider,
      Provider<CityDao> cityDaoProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.cityDaoProvider = cityDaoProvider;
  }

  @Override
  public HomeRepositoryImp get() {
    return providesHomeRepositoryImp(apiServiceProvider.get(), cityDaoProvider.get());
  }

  public static RepositoryModule_ProvidesHomeRepositoryImpFactory create(
      Provider<ApiService> apiServiceProvider, Provider<CityDao> cityDaoProvider) {
    return new RepositoryModule_ProvidesHomeRepositoryImpFactory(apiServiceProvider, cityDaoProvider);
  }

  public static HomeRepositoryImp providesHomeRepositoryImp(ApiService apiService,
      CityDao cityDao) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.providesHomeRepositoryImp(apiService, cityDao));
  }
}
