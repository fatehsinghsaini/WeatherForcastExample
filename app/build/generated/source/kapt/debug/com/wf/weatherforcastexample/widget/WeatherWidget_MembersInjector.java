// Generated by Dagger (https://dagger.dev).
package com.wf.weatherforcastexample.widget;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherWidget_MembersInjector implements MembersInjector<WeatherWidget> {
  private final Provider<WidgetRepository> widgetRepositoryProvider;

  public WeatherWidget_MembersInjector(Provider<WidgetRepository> widgetRepositoryProvider) {
    this.widgetRepositoryProvider = widgetRepositoryProvider;
  }

  public static MembersInjector<WeatherWidget> create(
      Provider<WidgetRepository> widgetRepositoryProvider) {
    return new WeatherWidget_MembersInjector(widgetRepositoryProvider);
  }

  @Override
  public void injectMembers(WeatherWidget instance) {
    injectWidgetRepository(instance, widgetRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.wf.weatherforcastexample.widget.WeatherWidget.widgetRepository")
  public static void injectWidgetRepository(WeatherWidget instance,
      WidgetRepository widgetRepository) {
    instance.widgetRepository = widgetRepository;
  }
}
